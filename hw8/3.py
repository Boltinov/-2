# 3. Создайте собственный класс-исключение, который должен проверять содержимое
# списка на наличие только чисел. Проверить работу исключения на реальном примере. Необходимо
# запрашивать у пользователя данные и заполнять список. Класс-исключение должен
# контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
# пользователь сам не остановит работу скрипта, введя, например, команду “stop”. При этом
# скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и
# строки. При вводе пользователем очередного элемента необходимо реализовать проверку типа
# элемента и вносить его в список, только если введено число. Класс-исключение должен не
# позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class CheckNumbers:
    def __init__(self, *args):
        self.my_list = []

    def my_input(self):
        while True:
            try:
                value = int(input('Введите число или текст. Если захотите выйти, напишите текст, затем слово stop'))
                self.my_list.append(value)
                print(f' Содержание списка - {self.my_list}')
            except:
                print(' Вы ввели текст, а нужно число, попробуйте еще раз ')

                userdata = input('Введите число или пропишите stop для выхода ')
                if userdata == 'stop':
                    print('Вы вышли')
                    break


try_except = CheckNumbers(1)
print(try_except.my_input())